<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ding.office.mapper.BillMapper">
    <resultMap id="resultMap" type="com.ding.office.entity.Bill">
        <id column="id" property="id"/>

        <id column="user" property="user"/>
        <id column="name" property="name"/>
        <id column="value" property="value"/>
        <id column="currencyType" property="currencyType"/>
        <id column="detail" property="detail"/>
        <id column="type" property="type"/>
        <id column="status" property="status"/>
        <id column="weight" property="weight"/>
        <id column="expenseTime" property="expenseTime"/>

        <id column="createTime" property="createTime"/>
        <id column="note" property="note"/>
    </resultMap>
    <resultMap id="resultMapInfo" type="com.ding.office.info.BillInfo">
        <id column="id" property="id"/>

        <id column="name" property="name"/>
        <id column="value" property="value"/>
        <id column="detail" property="detail"/>
        <id column="expenseTime" property="expenseTime"/>

        <id column="createTime" property="createTime"/>
        <id column="note" property="note"/>

        <association column="currencyType" property="currencyType" select="com.ding.office.mapper.DictionaryMapper.findById"/>
        <association column="user" property="user" select="com.ding.office.mapper.UserMapper.findById"/>
        <association column="type" property="type" select="com.ding.office.mapper.DictionaryMapper.findById"/>
        <association column="weight" property="weight" select="com.ding.office.mapper.DictionaryMapper.findById"/>
        <association column="status" property="status" select="com.ding.office.mapper.DictionaryMapper.findById"/>
    </resultMap>
    <select id="findById" resultMap="resultMapInfo">
        select *
        from bill
        where id=#{id}
    </select>
    <select id="search" resultMap="resultMapInfo">
        select * from bill
        <where>
            <if test="billVo.user != null">
                and user = #{billVo.user}
            </if>
            <if test="billVo.name != null and billVo.name.trim() != ''">
                and name like concat('%',#{billVo.name},'%')
            </if>
            <if test="billVo.currencyType != null and billVo.currencyType != 0">
                and currencyType = #{billVo.currencyType}
            </if>
            <if test="billVo.status != null and billVo.status != 0">
                and status = #{billVo.status}
            </if>
            <if test="billVo.type != null and billVo.type != 0">
                and type = #{billVo.type}
            </if>
            <if test="billVo.weight != null and billVo.type != 0">
                and weight = #{billVo.weight}
            </if>
            <if test="billVo.startDate != null and billVo.startDate.trim() != ''">
                and expenseTime  > #{billVo.startDate}
            </if>
            <if test="billVo.endDate != null and billVo.endDate.trim() != ''">
                and  #{billVo.endDate} > expenseTime
            </if>
        </where>
        ORDER BY expenseTime desc
        <if test="page!=null and page.currentPage!=null and page.currentPage!=0 and page.size!=null and page.size!=0">
            <bind name="start" value="(page.currentPage-1)*page.size"/>
            limit #{start},#{page.size}
        </if>
    </select>
    <select id="searchPage" resultType="java.lang.Integer">
        select count(1) from bill
        <where>
            <if test="billVo.user != null">
                and user = #{billVo.user}
            </if>
            <if test="billVo.name != null and billVo.name.trim() != ''">
                and name like concat('%',#{billVo.name},'%')
            </if>
            <if test="billVo.currencyType != null and billVo.currencyType != 0">
                and currencyType = #{billVo.currencyType}
            </if>
            <if test="billVo.type != null and billVo.type != 0">
                and type = #{billVo.type}
            </if>
            <if test="billVo.status != null and billVo.status != 0">
                and status = #{billVo.status}
            </if>
            <if test="billVo.weight != null and billVo.type != 0">
                and weight = #{billVo.weight}
            </if>
            <if test="billVo.startDate != null and billVo.startDate.trim() != ''">
                and expenseTime  > #{billVo.startDate}
            </if>
            <if test="billVo.endDate != null and billVo.endDate.trim() != ''">
                and  #{billVo.endDate} > expenseTime
            </if>
        </where>
    </select>
    <select id="getBillStatistics" resultType="com.ding.office.info.BillStatisticsInfo">
        SELECT
            YEAR( expenseTime ) year,
            MONTH ( expenseTime ) month,
            SUM( `value` ) valueOfMonth,
            MAX( `value` ) maxOfMonth
        FROM
            bill
        <where>
            <if test="billVo.user != null">
                and user = #{billVo.user}
            </if>
            <if test="billVo.status != null">
                and status = #{billVo.status}
            </if>
        </where>
        GROUP BY YEAR ( expenseTime ),MONTH ( expenseTime )
        <if test="billVo.orderByExpenseTime != null and billVo.orderByExpenseTime">
            ORDER BY YEAR(expenseTime),MONTH(expenseTime)
        </if>
        <if test="billVo.orderByTotalValue != null and billVo.orderByTotalValue">
            ORDER BY valueOfMonth
        </if>
        <if test="billVo.desc != null and billVo.desc">
            desc
        </if>
    </select>
    <insert id="add">
        insert into bill(status,user,name,value,currencyType,detail,type,weight,expenseTime,note)
        values(#{billVo.status},#{billVo.user},#{billVo.name},#{billVo.value},#{billVo.currencyType},#{billVo.detail},#{billVo.type},#{billVo.weight},#{billVo.expenseTime},#{billVo.note})
    </insert>
    <update id="update">
        update bill
        set name = #{billVo.name},
            value = #{billVo.value},
            currencyType = #{billVo.currencyType},
            type = #{billVo.type},
            weight = #{billVo.weight},
            expenseTime = #{billVo.expenseTime},
            detail = #{billVo.detail},
            note = #{billVo.note}
        where id = #{billVo.id}
            and user = #{billVo.user}
    </update>
    <delete id="delete">
        update bill
        set status = #{billVo.status}
        where id = #{billVo.id}
    </delete>
</mapper>