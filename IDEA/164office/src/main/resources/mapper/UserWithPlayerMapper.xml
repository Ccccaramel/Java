<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ding.office.mapper.UserWithPlayerMapper">
    <resultMap id="resultMap" type="com.ding.office.entity.UserWithPlayer">
        <id column="id" property="id"/>

        <id column="userId" property="userId"/>
        <id column="playerId" property="playerId"/>
        <id column="relationStatus" property="relationStatus"/>

        <id column="createTime" property="createTime"/>
        <id column="note" property="note"/>
    </resultMap>
    <resultMap id="resultInfoMap" type="com.ding.office.info.UserWithPlayerInfo">
        <id column="id" property="id"/>

        <id column="note" property="note"/>
        <id column="createTime" property="createTime"/>
        <id column="playerMainPage" property="playerMainPage"/>
        <id column="playerPreparePage" property="playerPreparePage"/>

        <association property="player" column="playerId" select="com.ding.office.mapper.PlayerMapper.findById"/>
        <association property="user" column="userId" select="com.ding.office.mapper.UserMapper.findById"/>
        <association property="checkStatus" column="checkStatus" select="com.ding.office.mapper.DictionaryMapper.findById"/>
        <association property="relation" column="relationStatus" select="com.ding.office.mapper.DictionaryMapper.findById"/>
    </resultMap>
    <select id="findBy" resultMap="resultMap">
        select * from user_with_player
        <where>
            <if test="userWithPlayerVo.userId!=null">
                and userId = #{userWithPlayerVo.userId}
            </if>
            <if test="userWithPlayerVo.playerId!=null">
                and playerId = #{userWithPlayerVo.playerId}
            </if>
            <if test="userWithPlayerVo.relationStatus!=null">
                and relationStatus = #{userWithPlayerVo.relationStatus}
            </if>
            <if test="userWithPlayerVo.checkStatus!=null">
                and checkStatus = #{userWithPlayerVo.checkStatus}
            </if>
        </where>
    </select>
    <insert id="add">
        insert into user_with_player(userId,playerId,relationStatus,checkStatus)
        values (#{userWithPlayerVo.userId},#{userWithPlayerVo.playerId},#{userWithPlayerVo.relationStatus},#{userWithPlayerVo.checkStatus})
    </insert>
    <select id="searchRelation" resultMap="resultInfoMap">
        select uwp.* from user_with_player uwp
        join player p on p.id=uwp.playerId
        join user u on u.id=uwp.userId
        <where>
            <if test="userWithPlayerVo.userId!=null">
                and uwp.userId=#{userWithPlayerVo.userId}
            </if>
            <if test="userWithPlayerVo.userName!=null and userWithPlayerVo.userName.trim()!=''">
                and u.name like concat('%',#{userWithPlayerVo.userName},'%')
            </if>
            <if test="userWithPlayerVo.playerScid!=null">
                and p.scid like concat('%',#{userWithPlayerVo.playerScid},'%')
            </if>
            <if test="userWithPlayerVo.playerName!=null and userWithPlayerVo.playerName.trim()!=''">
                and p.name like concat('%',#{userWithPlayerVo.playerName},'%')
            </if>
            <if test="userWithPlayerVo.playerType!=null">
                and p.type = #{userWithPlayerVo.playerType}
            </if>
            <if test="userWithPlayerVo.relationStatus!=null">
                and uwp.relationStatus = #{userWithPlayerVo.relationStatus}
            </if>
            <if test="userWithPlayerVo.checkStatus!=null">
                and uwp.checkStatus = #{userWithPlayerVo.checkStatus}
            </if>
        </where>
        ORDER BY uwp.createTime desc
        <if test="page!=null and page.currentPage!=null and page.currentPage!=0 and page.size!=null and page.size!=0">
            <bind name="start" value="(page.currentPage-1)*page.size"/>
            limit #{start},#{page.size}
        </if>
    </select>
    <select id="searchRelationOfPage" resultType="java.lang.Integer">
        select count(1) from user_with_player uwp
        join player p on p.id=uwp.playerId
        join user u on u.id=uwp.userId
        <where>
            <if test="userWithPlayerVo.userId!=null">
                and uwp.userId=#{userWithPlayerVo.userId}
            </if>
            <if test="userWithPlayerVo.userName!=null and userWithPlayerVo.userName.trim()!=''">
                and u.name like concat('%',#{userWithPlayerVo.userName},'%')
            </if>
            <if test="userWithPlayerVo.playerScid!=null">
                and p.scid like concat('%',#{userWithPlayerVo.playerScid},'%')
            </if>
            <if test="userWithPlayerVo.playerName!=null and userWithPlayerVo.playerName.trim()!=''">
                and p.name like concat('%',#{userWithPlayerVo.playerName},'%')
            </if>
            <if test="userWithPlayerVo.playerType!=null">
                and p.type = #{userWithPlayerVo.playerType}
            </if>
            <if test="userWithPlayerVo.relationStatus!=null">
                and uwp.relationStatus = #{userWithPlayerVo.relationStatus}
            </if>
            <if test="userWithPlayerVo.checkStatus!=null">
                and uwp.checkStatus = #{userWithPlayerVo.checkStatus}
            </if>
        </where>
    </select>
    <update id="changeRelationStatus">
        update user_with_player set relationStatus=#{relationStatus}
        where userId = #{userId} and playerId = #{playerId}
    </update>
    <update id="saveCheckInfo">
        update user_with_player set playerMainPage=#{playerMainPageNewName},playerPreparePage=#{playerPreparePageNewName},checkStatus=#{checkStatus}
        where id = #{relationId}
    </update>
    <update id="updateCheckInfo">
        update user_with_player set note=#{userWithPlayerVo.note},checkStatus=#{userWithPlayerVo.checkStatus}
        where id = #{userWithPlayerVo.id}
    </update>
    <select id="findById" resultMap="resultInfoMap">
        select * from user_with_player
        where id = #{id}
    </select>
</mapper>