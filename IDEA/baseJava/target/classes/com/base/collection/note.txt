集合
  集合可以看作一个容器

集合类的继承关系
  java.lang.Object
    |---Map
    |    |---HashMap
    |    |---TreeMap
    |
    |---Collection extends Iterable
         |---Set
         |    |---HashSet
         |    |---TreeSet
         |---List
              |---ArrayList
              |---LinkedList


Map
  允许 value 为 null
  get(Object key):根据 key 获取 value
  put(K key,V value):向集合中添加指定的 key 和 value 的映射关系
    以前从没注意 put() 方法,今天发现 put() 方法居然有返回值?!
    如果集合中不存在 key 那么返回 null
    如果存在则返回上原本的 value
  containsKey(Object key):是否存在 key
  containsValue(Object value):是否存在 value
  keySet():返回一个包含所有 key 的 Set 集合
  values():返回一个包含所有 value 的 Collection 集合
  子类
    HashMap
      增删查效率高,允许一个元素的 key 为 null
    TreeMap
      增删查效率低,根据 key 排序,不允许 key 为 null
Collection
  成员方法:
    add(E e):添加元素
    remove(Object o):移除元素
    isEmpty():判断是否为空
    iterator():返回迭代器
    size():集合大小
  子接口
    List
      允许重复,不固定大小
      成员方法:
        get(int index):获得指定索引位置的元素
        set(int index,Object obj):将集合中指定索引位置的对象修改为指定的对象
      子类
        ArrayList
          可变数组,可保存 null
          访问速度快,增删效率低
        LinkedList
          采用链表结构保存对象
          访问速度慢,增删效率高
    Set
      不允许重复,无序,可存储一个 null
      子类
        HashSet
          无序
          创建一个对象 new HashSet<>(); 进入其构造函数会发现
            public HashSet() {
                map = new HashMap<>();
            }
          方法:
            add():向集合添加元素
              private static final Object PRESENT = new Object();
              public boolean add(E e) {
                  return map.put(e, PRESENT)==null;
              }
            first():返回第一个元素
            last():返回最后一个元素
        TreeSet implements SortedSet
          会对元素进行排序

Q:查看源码发现 Map 和 Collection 并没有继承 Object 类
A:我们创建一个类时,如果没有明确继承一个父类,那么它就会自动继承 Object 成为 Object 的子类
  Object 类可以显示继承
    public class Xxx extends Object{...}
  也可以隐式继承
    public class Xxx{...}

Iterator(迭代器)
  接口,用于访问集合的方法,可用于迭代 ArrayList 和 HashSet 等集合
  Collection 继承了 Iterator
  但 Map 没有继承

遍历
  1.通过迭代器遍历集合
    Collection 接口继承了 Iterable 接口,而 Iterable 接口中有一个 Iterator 类型的成员
      Iterator iterator=hashSet.iterator();
      while(iterator.hasNext()){
        sout((String)iterator.next());
      }
  2.foreach()
    Map 接口和 Iterable 接口都包含 forEach() 抽象方法(注意!不是同一个!一个是 k-v 格式一个是 v 格式)
    但仅用于将数据通过 Lambda 表达式打印至控制台
    提高了代码的可读性和安全性(数组越界)
      hashSet.forEach(...);

Q:导入 List 类时，都会提示有两个包含有 List 类,一个是 util 包,而另一个是 awt 包,那么这两者的区别在何处?
A: util 包里主要是工具类,而 awt 包里主要是图形组件