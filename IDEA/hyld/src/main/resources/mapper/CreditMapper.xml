<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ding.hyld.mapper.CreditMapper">
    <resultMap id="resultMap" type="com.ding.hyld.entity.Credit">
        <id column="id" property="id"/>

        <id column="teamPlayerId" property="teamPlayerId"/>
        <id column="settlementTime" property="settlementTime"/>
        <id column="credit" property="credit"/>
        <id column="creditType" property="creditType"/>

        <id column="createTime" property="createTime"/>
        <id column="note" property="note"/>
    </resultMap>
    <resultMap id="resultInfoMap" type="com.ding.hyld.info.CreditInfo">
        <id column="playerScid" property="playerScid"/>
        <id column="creditId" property="creditId"/>
        <id column="averageCreditRank" property="averageCreditRank"/>
        <id column="matchSettlementTimes" property="matchSettlementTimes"/>
        <id column="averageCredit" property="averageCredit"/>
        <id column="matchTotalCredit" property="matchTotalCredit"/>
        <id column="playerName" property="playerName"/>
        <id column="exCredit" property="exCredit"/>
        <id column="totalCredit" property="totalCredit"/>
        <id column="restTimes" property="restTimes"/>
        <id column="settlementTime" property="settlementTime"/>
        <id column="credit" property="credit"/>
        <id column="creditTypeId" property="creditTypeId"/>
        <id column="note" property="note"/>
        <id column="teamName" property="teamName"/>
        <association property="creditType" column="creditTypeId" select="com.ding.hyld.mapper.DictionaryMapper.findById"/>
        <association property="teamCompetitionType" column="teamCompetitionTypeId" select="com.ding.hyld.mapper.DictionaryMapper.findById"/>
    </resultMap>
    <!--  统计战队所有正常队员的战队赛积分并排名  -->
    <select id="getTeamMemberScoreboard" resultMap="resultInfoMap">
        select
            id as teamMemberId,
            scid as playerScid,
            name as playerName,
            rank() over(ORDER BY Round(ture_credit/times,2) desc) as averageCreditRank,
            if(times=0 , 0,Round(ture_credit/times,2)) as averageCredit,
            times as matchSettlementTimes,
            restTimes as restTimes,
            ture_credit as matchTotalCredit,
            ex_credit as exCredit,
            total_credit as totalCredit
        from (SELECT
                  twp.id as id,
                  p.scid as scid,
                  p.`name` as name,
                  SUM(if(c.creditType =200,1,0)) as times,
                  SUM(if(c.creditType =202,1,0)) as restTimes,
                  SUM(if(c.creditType =201,c.credit,0)) ex_credit,
                  SUM(if(c.creditType =200,c.credit,0)) ture_credit,
                  SUM(if(c.credit is not null,c.credit,0)) as total_credit
              FROM team_with_player twp
                       left join player p on p.id=twp.playerId
                       left join team t on t.id=twp.teamId
                       left join credit c on c.teamPlayerId=twp.id
              <where>
                  and c.uwtId=#{searchTeamMemberScoreboardInfo.uwtId}
                  and twp.teamMemberStatus=100
                  and c.teamCompetitionType=#{searchTeamMemberScoreboardInfo.teamCompetitionTypeId}
              </where>
              GROUP BY twp.id
              ORDER BY total_credit) as t;
    </select>
    <!--  获取所有队员的积分记录  -->
    <select id="searchCreditBy" resultMap="resultInfoMap">
        select
            c.id creditId,
            c.settlementTime settlementTime,
            c.credit credit,
            c.creditType creditTypeId,
            c.teamCompetitionType teamCompetitionTypeId,
            c.note note,
            p.scid playerScid,
            p.name playerName,
            t.name teamName
        FROM team_with_player twp
            join player p on p.id=twp.playerId
            join team t on t.id=twp.teamId
            join credit c on c.teamPlayerId=twp.id
        <where>
            <if test="creditVo.teamId != null">
                and t.id = #{creditVo.teamId}
            </if>
            <if test="creditVo.uwtId != null">
                and c.uwtId = #{creditVo.uwtId}
            </if>
            <if test="creditVo.playerName != null and creditVo.playerName.trim() != ''">
                and p.name like concat('%',#{creditVo.playerName},'%')
            </if>
            <if test="creditVo.playerScid != null and creditVo.playerScid.trim() != ''">
                and p.scid like concat('%',#{creditVo.playerScid},'%')
            </if>
            <if test="creditVo.teamMemberId != null">
                and twp.id = #{creditVo.teamMemberId}
            </if>
            <if test="creditVo.settlementTime != null and creditVo.settlementTime.trim() != ''">
                and c.settlementTime = #{creditVo.settlementTime}
            </if>
            <if test="creditVo.teamCompetitionTypeId != null">
                and c.teamCompetitionType = #{creditVo.teamCompetitionTypeId}
            </if>
            <if test="creditVo.playerId != null">
                and twp.playerId = #{creditVo.playerId}
            </if>
        </where>
        ORDER BY c.settlementTime desc
        <if test="page!=null and page.currentPage!=null and page.currentPage!=0 and page.size!=null and page.size!=0">
            <bind name="start" value="(page.currentPage-1)*page.size"/>
            limit #{start},#{page.size}
        </if>
    </select>
    <update id="saveTeamMemberCredit">
        update credit
        set credit=#{teamMemberCreditVo.credit},
            creditType=#{teamMemberCreditVo.creditTypeId},
            settlementTime=#{teamMemberCreditVo.settlementTime},
            teamCompetitionType=#{teamMemberCreditVo.teamCompetitionTypeId},
            note=#{teamMemberCreditVo.note}
        where id=#{teamMemberCreditVo.creditId}
    </update>
    <insert id="add">
        insert into
            credit(teamPlayerId,
                   settlementTime,
                   credit,
                   creditType,
                   note,
                   uwtId,
                   teamCompetitionType)
        values (#{teamMemberCreditVo.teamMemberId},
                #{teamMemberCreditVo.settlementTime},
                #{teamMemberCreditVo.credit},
                #{teamMemberCreditVo.creditTypeId},
                #{teamMemberCreditVo.note},
                #{teamMemberCreditVo.uwtId},
                #{teamMemberCreditVo.teamCompetitionTypeId});
    </insert>
    <select id="getSettlementTimeList" resultType="java.time.LocalDateTime">
        SELECT c.settlementTime
        from credit c
        join team_with_player twp on twp.id=c.teamPlayerId
        where c.uwtId=#{uwtId}
        GROUP BY c.settlementTime
        order by c.settlementTime desc;
    </select>
    <select id="getTeamData" resultMap="resultInfoMap">
        SELECT SUM(c.credit) totalCredit,c.settlementTime settlementTime
        from credit c
        <where>
            and EXISTS (SELECT 1 from team_with_player twp WHERE twp.id=c.teamPlayerId)
            and c.creditType!=201 -- 只统计正常积分和请假积分的数据
            and c.uwtId=#{uwtId}
            and c.teamCompetitionType=#{teamCompetitionType}
        </where>
        GROUP BY c.settlementTime
        ORDER BY c.settlementTime;
    </select>
</mapper>