<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ding.hyld.mapper.MusicMapper">
    <resultMap id="resultMap" type="com.ding.hyld.entity.Music">
        <id column="id" property="id"/>

        <id column="coverRef" property="coverRef"/>
        <id column="name" property="name"/>
        <id column="composing" property="composing"/>
        <id column="lyrics" property="lyrics"/>
        <id column="arranger" property="arranger"/>
        <id column="singer" property="singer"/>
        <id column="info" property="info"/>
        <id column="album" property="album"/>
        <id column="releaseTime" property="releaseTime"/>
        <id column="audioName" property="audioName"/>
        <id column="audioRef" property="audioRef"/>
        <id column="mvLink" property="mvLink"/>
        <id column="status" property="status"/>

        <id column="createTime" property="createTime"/>
        <id column="note" property="note"/>
    </resultMap>
    <resultMap id="resultInfoMap" type="com.ding.hyld.info.MusicInfo">
        <id column="id" property="id"/>

        <id column="coverRef" property="coverRef"/>
        <id column="name" property="name"/>
        <id column="composing" property="composing"/>
        <id column="lyrics" property="lyrics"/>
        <id column="arranger" property="arranger"/>
        <id column="singer" property="singer"/>
        <id column="info" property="info"/>
        <id column="album" property="album"/>
        <id column="releaseTime" property="releaseTime"/>
        <id column="audioName" property="audioName"/>
        <id column="audioRef" property="audioRef"/>
        <id column="mvLink" property="mvLink"/>

        <id column="createTime" property="createTime"/>
        <id column="note" property="note"/>

        <association column="status" property="status" select="com.ding.hyld.mapper.DictionaryMapper.findById"/>
    </resultMap>
    <resultMap id="resultDetailInfoMap" type="com.ding.hyld.info.MusicInfo">
        <id column="id" property="id"/>

        <id column="coverRef" property="coverRef"/>
        <id column="name" property="name"/>
        <id column="composing" property="composing"/>
        <id column="lyrics" property="lyrics"/>
        <id column="arranger" property="arranger"/>
        <id column="singer" property="singer"/>
        <id column="info" property="info"/>
        <id column="album" property="album"/>
        <id column="releaseTime" property="releaseTime"/>
        <id column="audioName" property="audioName"/>
        <id column="audioRef" property="audioRef"/>
        <id column="mvLink" property="mvLink"/>

        <id column="createTime" property="createTime"/>
        <id column="note" property="note"/>

        <association column="status" property="status" select="com.ding.hyld.mapper.DictionaryMapper.findById"/>
        <collection property="musicLyricInfoList" column="id" select="com.ding.hyld.mapper.MusicLyricMapper.findByMusicId"/>
    </resultMap>
    <insert id="add">
        insert into
            music(coverRef,name,composing,lyrics,arranger,singer,info,album,releaseTime,audioName,audioRef,mvLink,note,status)
        values(#{musicVo.coverRef},
               #{musicVo.name},
               #{musicVo.composing},
               #{musicVo.lyrics},
               #{musicVo.arranger},
               #{musicVo.singer},
               #{musicVo.info},
               #{musicVo.album},
               #{musicVo.releaseTime},
               #{musicVo.audioName},
               #{musicVo.audioRef},
               #{musicVo.mvLink},
               #{musicVo.note},
               #{musicVo.status})
    </insert>
    <select id="searchMusic" resultMap="resultInfoMap">
        select * from music
        <where>
            <if test="musicVo.id != null">
                and id = #{musicVo.id}
            </if>
            <if test="musicVo.keywords != null and musicVo.keywords.trim() != ''">
                and (name like concat('%',#{musicVo.keywords},'%')
                or composing like concat('%',#{musicVo.keywords},'%')
                or lyrics like concat('%',#{musicVo.keywords},'%')
                or arranger like concat('%',#{musicVo.keywords},'%')
                or singer like concat('%',#{musicVo.keywords},'%')
                or info like concat('%',#{musicVo.keywords},'%')
                or album like concat('%',#{musicVo.keywords},'%'))
            </if>
        </where>
        ORDER BY createTime desc
        <if test="page!=null and page.currentPage!=null and page.currentPage!=0 and page.size!=null and page.size!=0">
            <bind name="start" value="(page.currentPage-1)*page.size"/>
            limit #{start},#{page.size}
        </if>
    </select>
    <select id="findBy" resultMap="resultDetailInfoMap">
        select * from music
        <where>
            <if test="musicVo.id != null">
                and id = #{musicVo.id}
            </if>
            <if test="musicVo.status != null">
                and status = #{musicVo.status}
            </if>
        </where>
    </select>
    <select id="searchMusicOfPage" resultType="java.lang.Integer">
        select count(1) from music
        <where>
            <if test="musicVo.id != null">
                and id = #{musicVo.id}
            </if>
            <if test="musicVo.keywords != null and musicVo.keywords.trim() != ''">
                and (name like concat('%',#{musicVo.keywords},'%')
                or composing like concat('%',#{musicVo.keywords},'%')
                or lyrics like concat('%',#{musicVo.keywords},'%')
                or arranger like concat('%',#{musicVo.keywords},'%')
                or singer like concat('%',#{musicVo.keywords},'%')
                or info like concat('%',#{musicVo.keywords},'%')
                or album like concat('%',#{musicVo.keywords},'%'))
            </if>
        </where>
        ORDER BY createTime desc
    </select>
    <select id="getAll" resultMap="resultInfoMap">
        select * from music
        <where>
            <if test="musicVo.id != null">
                and id = #{musicVo.id}
            </if>
            <if test="musicVo.status != null">
                and status = #{musicVo.status}
            </if>
        </where>
    </select>
    <update id="update">
        update music
        set
            <if test="musicVo.coverRef!=null and musicVo.coverRef.trim()!=''">
                coverRef = #{musicVo.coverRef},
            </if>
            <if test="musicVo.audioName!=null and musicVo.audioName.trim()!='' and musicVo.audioRef!=null and musicVo.audioRef.trim()!=''">
                audioName = #{musicVo.audioName},
                audioRef = #{musicVo.audioRef},
            </if>
            name = #{musicVo.name},
            composing = #{musicVo.composing},
            lyrics = #{musicVo.lyrics},
            arranger = #{musicVo.arranger},
            singer = #{musicVo.singer},
            album = #{musicVo.album},
            mvLink = #{musicVo.mvLink},
            releaseTime = #{musicVo.releaseTime},
            info = #{musicVo.info},
            note = #{musicVo.note}
        where id = #{musicVo.id}
    </update>
    <update id="updateStatus">
        update music
        set status = #{musicVo.status}
        where id = #{musicVo.id}
    </update>
</mapper>